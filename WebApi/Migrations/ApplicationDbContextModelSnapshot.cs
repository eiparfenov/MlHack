// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string[]>("Answers")
                        .HasColumnType("text[]")
                        .HasColumnName("answers");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    b.Property<int>("ReadyToAnswer")
                        .HasColumnType("integer")
                        .HasColumnName("ready_to_answer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer")
                        .HasColumnName("student_id");

                    b.Property<int>("TeacherId")
                        .HasColumnType("integer")
                        .HasColumnName("teacher_id");

                    b.Property<int>("WebinarId")
                        .HasColumnType("integer")
                        .HasColumnName("webinar_id");

                    b.HasKey("Id")
                        .HasName("pk_answer");

                    b.HasIndex("CourseId")
                        .HasDatabaseName("ix_answer_course_id");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("ix_answer_student_id");

                    b.HasIndex("TeacherId")
                        .HasDatabaseName("ix_answer_teacher_id");

                    b.HasIndex("WebinarId")
                        .HasDatabaseName("ix_answer_webinar_id");

                    b.ToTable("answer", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_course");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.ModelResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerId")
                        .HasColumnType("integer")
                        .HasColumnName("answer_id");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_positive");

                    b.Property<bool>("IsRelevant")
                        .HasColumnType("boolean")
                        .HasColumnName("is_relevant");

                    b.Property<int>("Object")
                        .HasColumnType("integer")
                        .HasColumnName("object");

                    b.HasKey("Id")
                        .HasName("pk_model_response");

                    b.HasIndex("AnswerId")
                        .IsUnique()
                        .HasDatabaseName("ix_model_response_answer_id");

                    b.ToTable("model_response", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_student");

                    b.ToTable("student", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_teacher");

                    b.ToTable("teacher", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Webinar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_webinar");

                    b.ToTable("webinar", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Answer", b =>
                {
                    b.HasOne("WebApi.Models.Course", "Course")
                        .WithMany("Answers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_answer_courses_course_id");

                    b.HasOne("WebApi.Models.Student", "Student")
                        .WithMany("Answers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_answer_students_student_id");

                    b.HasOne("WebApi.Models.Teacher", "Teacher")
                        .WithMany("Answers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_answer_teachers_teacher_id");

                    b.HasOne("WebApi.Models.Webinar", "Webinar")
                        .WithMany("Answers")
                        .HasForeignKey("WebinarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_answer_webinars_webinar_id");

                    b.Navigation("Course");

                    b.Navigation("Student");

                    b.Navigation("Teacher");

                    b.Navigation("Webinar");
                });

            modelBuilder.Entity("WebApi.Models.ModelResponse", b =>
                {
                    b.HasOne("WebApi.Models.Answer", "Answer")
                        .WithOne("ModelResponse")
                        .HasForeignKey("WebApi.Models.ModelResponse", "AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_model_response_answer_answer_id");

                    b.Navigation("Answer");
                });

            modelBuilder.Entity("WebApi.Models.Answer", b =>
                {
                    b.Navigation("ModelResponse");
                });

            modelBuilder.Entity("WebApi.Models.Course", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("WebApi.Models.Student", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("WebApi.Models.Teacher", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("WebApi.Models.Webinar", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
